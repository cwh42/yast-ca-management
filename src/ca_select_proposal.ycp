/**
 * File:
 *	ca_select_proposal.ycp
 *
 * Module:
 *	ca_select_proposal.ycp
 *
 * Authors:
 *	Stefan Schubert <schubi@suse.de>
 *
 * Summary:
 *	
 *
 * $Id$
 *
 */
{
    textdomain "ca-management";
    import "CaMgm";

    import "Mode";
    import "Wizard";
    import "Label";
    import "Popup";
    
    include "ca-management/popup.ycp";
    include "ca-management/util.ycp";
    
    /**
     * editDefaultEntries() - changing Entries
     */
    define any editDefaultEntries () ``{

	Wizard::CreateDialog();
	Wizard::SetDesktopIcon("ca_mgm");    
	string help_text = _("<p>
YaST generates a <b>default CA/Certificate</b> automatically. This CA/Certificate
will be used for communicating with the <b>Apache Server</b>.
At this frame you can change these <b>default settings</b>.
</p>
");	
	define string confirmPassword = CaMgm::prop_password;

	term contents = `VBox (
			       `Heading (_("Edit Default Settings")),
			       `VBox(

				     `HBox(`TextEntry( `id (`id_CAName), _("&CA Name:"),
						       CaMgm::prop_CAName ),
					   `TextEntry( `id (`id_commonName), _("&Common Name:"),
						       CaMgm::prop_ca_commonName )
					   ),
				     `HBox(`TextEntry( `id (`id_serverName), _("&Server Name:"),
						       CaMgm::prop_server_commonName ),
					   `ComboBox( `id (`id_country), _("C&ountry:"), getCountryList())
					   ),				     
				     `HBox(`TextEntry( `id (`id_organisation), _("O&rgansisation:"),
						       CaMgm::prop_organisation ),
					   `TextEntry( `id (`id_organisationUnit), _("Or&gansisation Unit:"),
						       CaMgm::prop_organisationUnit )
					   ),
				     `HBox(`TextEntry( `id (`id_locality), _("Loca&lity:"),
						       CaMgm::prop_locality ),
					   `TextEntry( `id (`id_state), _("&State:"),
						       CaMgm::prop_state )),
				     `HBox(`Password(`id(`pw1), _("Password:"), CaMgm::prop_password),
					   `Password(`id(`pw2), _("Confirm Password:"), confirmPassword)
					   )
				     )
			       );

	// Screen title for the first interactive dialog
	Wizard::SetContentsButtons("", contents, help_text,
				   Label::BackButton(), Label::FinishButton());

	// Get the user input.
	//
	any ret = nil;

	repeat
	    {
		ret = Wizard::UserInput();

		if (ret == `next)
		{
		    confirmPassword = (string) UI::QueryWidget(`id(`pw2), `Value);
		    if ((string) UI::QueryWidget(`id(`pw1), `Value) != confirmPassword)
		    {
			Popup::Error(_("New passwords are not equal."));
			ret = `again;
		    }
		    else
		    {
			CaMgm::prop_ca_commonName = (string) UI::QueryWidget (`id (`id_commonName), `Value);
			CaMgm::prop_server_commonName = (string) UI::QueryWidget (`id (`id_serverName), `Value);
			CaMgm::prop_CAName = (string) UI::QueryWidget(`id(`id_CAName), `Value);
			CaMgm::prop_organisation = (string) UI::QueryWidget(`id(`id_organisation), `Value);
			CaMgm::prop_organisationUnit = (string) UI::QueryWidget(`id(`id_organisationUnit), `Value);
			CaMgm::prop_locality = (string) UI::QueryWidget(`id(`id_locality), `Value);
			CaMgm::prop_state = (string) UI::QueryWidget(`id(`id_state), `Value);
			CaMgm::prop_country = (string) UI::QueryWidget(`id(`id_country), `Value);
			CaMgm::prop_password = (string) UI::QueryWidget(`id(`pw1), `Value);			    
		    }
		}
	    }
	until ( ret == `next
		|| ret == `abort
		|| ret == `back);
	
	UI::CloseDialog ();
	return ret;
    };



   /* ----------------------------------------------------------------------
    * MAIN module
    * ----------------------------------------------------------------------*/
    Wizard::CreateDialog();
    Wizard::SetDesktopIcon("ca_mgm");    
    
    term heading = `Heading (_("Managing CAs/Certificates"));


    term contents = `VBox(
			heading,
			`Frame ( _("Selection"),
				 `RadioButtonGroup(`id(`rb),
						   `VBox(
							 `Left(`RadioButton(`id(`def), `opt( `notify),
									    _("Creating &default CA/Certificate."))),
							 `HBox(`HSpacing (3),`Left(`PushButton (`id(`change),
												`opt( `notify),
												_("Edit default &Settings")))
							       ),
							 `Left(`RadioButton(`id(`none), `opt( `notify),
									    _("Creating &no CA/Certificate."))),
							 `Left(`RadioButton(`id(`floppy), `opt( `notify),
									    _("Import CA/Certificate from &floppy."))),
							 `Left(`RadioButton(`id(`expert), `opt( `notify),
									    _("Calling CA-Management for &expert settings.")))
							 )
						   )
				 )
			);


    string help_text = _("<p>
At this frame you can select the kind of installing <b>CAs</b> and <b>certificates</b>
while completing the installation
</p>
");

    // Screen title for the first interactive dialog
    Wizard::SetContentsButtons("", contents, help_text,
			       Label::BackButton(), Label::FinishButton());

    UI::ChangeWidget (`id(`rb), `CurrentButton, CaMgm::prop_selection);


    // Get the user input.
    //
    any ret = nil;

    repeat
    {
	UI::ChangeWidget (`id (`change), `Enabled,
			  UI::QueryWidget(`id(`rb), `CurrentButton) == `def);

	ret = Wizard::UserInput();

	if (ret == `next
	    || ret == `rb )
	{
	    // Get selection
	    //
	    CaMgm::prop_selection = (symbol) UI::QueryWidget(`id(`rb), `CurrentButton);
	}
	if (ret == `change)
	{
	    ret = editDefaultEntries ();
	    if (ret != `abort)
	    {
		ret = `again;
	    }
	}
    }
    until ( ret == `next
	    || ret == `abort
	    || ret == `back);
    
    UI::CloseDialog();

    return (symbol) ret;
}
