/**
 *
 * File:
 *   new_cert_callbacks.ycp
 *
 * Module:
 *   CA Management
 *
 * Summary:
 *   Callback definitions for advanced setting ( creating
 *   new certificate )
 *
 * Authors:
 *   Stefan Schubert <schubi@suse.de>
 *
 * $Id$
 *
 * Creating a new CA/Certificate
 *
 */


{
    textdomain "ca-management";

    import "CaMgm";
    import "CaManagement";

    //  "get" functions are used for setting already existing values or
    //  default values into the widgets. 
    //
    //  "set" functions read the values from the widget and save these
    //  values to the global varibable ( defined in CaMgm.ycp )

    
    define void get_advanced_basic_constaints() ``{
	y2milestone("calling get_advanced_basic_constaints");

	UI::ChangeWidget(`id(`id_adv_cri_ca), `Value, CaMgm::adv_cri_ca);
	if (CaMgm::adv_ca == "CA:false")
	{
	    UI::ChangeWidget(`id(`id_adv_ca), `Value, `caFalse);
	}
	else
	{
	    UI::ChangeWidget(`id(`id_adv_ca), `Value, `caTrue);	    
	}
	UI::ChangeWidget(`id(`id_adv_pathlen), `Value, CaMgm::adv_pathlen);
	UI::ChangeWidget(`id(`id_adv_pathlenValue), `Value, CaMgm::adv_pathlenValue);
	UI::ChangeWidget(`id(`id_adv_pathlenValue), `Enabled, CaMgm::adv_pathlen);
    }
    define string set_advanced_basic_constaints() ``{
	y2milestone("calling set_advanced_basic_constaints");
	string error = "";

	CaMgm::adv_cri_ca = (boolean) UI::QueryWidget(`id(`id_adv_cri_ca), `Value);
	any item = UI::QueryWidget(`id(`id_adv_ca), `Value);
	if (item == `caFalse)
	{
	    CaMgm::adv_ca = "CA:false";	    
	}
	else
	{
	    CaMgm::adv_ca = "CA:true";
	}
	CaMgm::adv_pathlen = (boolean) UI::QueryWidget(`id(`id_adv_pathlen), `Value);
	CaMgm::adv_pathlenValue = (integer) UI::QueryWidget(`id(`id_adv_pathlenValue), `Value);
	
	return error;
    }

    
    define void get_advanced_CRL_distribution_point() ``{
	y2milestone("calling get_advanced_CRL_distribution_point");
	
	UI::ChangeWidget(`id(`id_adv_cri_distribution_point), `Value, CaMgm::adv_cri_distribution_point);
	UI::ChangeWidget(`id(`id_adv_distribution_point), `Value, CaMgm::adv_distribution_point);
    }
    define string set_advanced_CRL_distribution_point() ``{
	y2milestone("calling set_advanced_CRL_distribution_point");
	string error = "";

	CaMgm::adv_cri_distribution_point = (boolean) UI::QueryWidget(`id(`id_adv_cri_distribution_point), `Value);
	CaMgm::adv_distribution_point = (string) UI::QueryWidget(`id(`id_adv_distribution_point), `Value);
	
	return error;	
    }

    
    define void get_advanced_challange_password() ``{
	y2milestone("calling get_advanced_challange_password");
	
	UI::ChangeWidget(`id(`id_adv_challange_password), `Value, CaMgm::adv_challange_password);
    }
    define string set_advanced_challange_password() ``{
	y2milestone("calling set_advanced_challange_password");
	string error = "";

	CaMgm::adv_challange_password = (string) UI::QueryWidget(`id(`id_adv_challange_password), `Value);
	
	return error;
    }	

    
    define void get_advanced_issuer_alt_name() ``{
	y2milestone("calling get_advanced_issuer_alt_name");

	list<term> itemList = [];
	integer i = 0;
	foreach (map element, CaMgm::adv_issuer_alt_name_list, ``{
	    itemList = add (itemList, `item (`id (i), element["kind"]:"", element["name"]:"" ) );
	    i = i + 1;
	});

	UI::ChangeWidget(`id(`id_adv_issuer_alt_name), `Items, itemList);
	UI::ChangeWidget(`id(`id_adv_cri_issuer_alt_name), `Value, CaMgm::adv_cri_issuer_alt_name);
	UI::ChangeWidget(`id(`id_adv_copy_issuer_alt_name), `Value, CaMgm::adv_copy_issuer_alt_name);			
    }
    define string set_advanced_issuer_alt_name() ``{
	y2milestone("calling set_advanced_issuer_alt_name");
	string error = "";

	CaMgm::adv_cri_issuer_alt_name = (boolean) UI::QueryWidget(`id(`id_adv_cri_issuer_alt_name), `Value);
	CaMgm::adv_copy_issuer_alt_name = (boolean) UI::QueryWidget(`id(`id_adv_copy_issuer_alt_name), `Value);		
	// The table widget will be filled in the add or delete callback
	
	return error;
    }

    define term issuer_box = `HBox( `VSpacing(10),
				     `VBox (
					    `HSpacing(10),
					    `RadioButtonGroup(`id(`rb), 
							      `HBox(
								    `RadioButton(`id("email"), `opt(`notify), "email", true),
								    `RadioButton(`id("URI"), `opt(`notify), "URI"),
								    `RadioButton(`id("DNS"), `opt(`notify), "DNS"),
								    `RadioButton(`id("IP"), `opt(`notify), "IP"),
								    `RadioButton(`id("RID"), `opt(`notify), "RID")
								    )
							      ),
					    `TextEntry(`id(`name), "Name:"),
					    // push button label
					    `HBox(`PushButton (`id(`cancel), `opt(`key_F9), Label::CancelButton()),
						  `HStretch(),
						  `PushButton (`id(`ok), `opt(`default, `key_F10), Label::OKButton())
						  ),
					    `HSpacing(10)
					    ),
				     `VSpacing(10)
				     );
    
    define void add_advanced_issuer_alt_name() ``{
	y2milestone("Calling add_advanced_issuer_alt_name");
	
	UI::OpenDialog (`opt(`decorated ),
			issuer_box
			);
	UI::SetFocus (`id(`ok));
	while (true)
	{
	    any ret = UI::UserInput();
	    if (ret == `ok)
	    {
		map new_entry = $[];
		new_entry["kind"] = (string) UI::QueryWidget(`id(`rb), `CurrentButton);
		new_entry["name"] = (string) UI::QueryWidget(`id(`name), `Value);
		CaMgm::adv_issuer_alt_name_list	= add (CaMgm::adv_issuer_alt_name_list, new_entry);
		break;
	    }
	    else if (ret == `cancel)
	    {
		break;
	    }
	}
	
	UI::CloseDialog ();
	// restoring table
	get_advanced_issuer_alt_name();
    }
    define void delete_advanced_issuer_alt_name() ``{
	y2milestone("Calling delete_advanced_issuer_alt_name");
	
	integer current_item  = (integer)UI::QueryWidget(`id(`id_adv_issuer_alt_name), `CurrentItem);
	term table_item = (term) UI::QueryWidget(`id(`id_adv_issuer_alt_name), `Item(current_item));

	if (table_item == nil)
	{
	    Popup::Error (_("No item has been selected."));
	    return;
	}

	string current_kind = (string) select(table_item, 1, "");
	string current_name = (string) select(table_item, 2, "");
	
        if (Popup::YesNoHeadline (
                // To translators: ContinueCancel Popup headline
                _("Delete"),
                // To translators: ContinueCancel Popup
                _("Really delete this entry ?")))
        {
	    map new_entry = $[];
	    list<map> dummy_map = [];

	    //finding entry in list
	    foreach (map element, CaMgm::adv_issuer_alt_name_list, ``{
		if (element["kind"]:"" != current_kind
		    || element["name"]:"" != current_name )
		{
		    dummy_map = add (dummy_map, element);
		}
	    });
		
	    CaMgm::adv_issuer_alt_name_list	= dummy_map;
	}

	// restoring table
	get_advanced_issuer_alt_name();		
    }
    define void modify_advanced_issuer_alt_name() ``{
	y2milestone("Calling modify_advanced_issuer_alt_name");
	
	integer current_item  = (integer)UI::QueryWidget(`id(`id_adv_issuer_alt_name), `CurrentItem);
	term table_item = (term) UI::QueryWidget(`id(`id_adv_issuer_alt_name), `Item(current_item));

	if (table_item == nil)
	{
	    Popup::Error (_("No item has been selected."));
	    return;
	}

	string current_kind = (string) select(table_item, 1, "");
	string current_name = (string) select(table_item, 2, "");
	
	UI::OpenDialog (`opt(`decorated ),
			issuer_box
			);

	UI::ChangeWidget(`id(`name), `Value, current_name);
	UI::ChangeWidget(`id(`rb), `CurrentButton, current_kind);
	
	UI::SetFocus (`id(`ok));
	while (true)
	{
	    any ret = UI::UserInput();
	    if (ret == `ok)
	    {
		map new_entry = $[];
		list<map> dummy_map = [];
		new_entry["kind"] = (string) UI::QueryWidget(`id(`rb), `CurrentButton);
		new_entry["name"] = (string) UI::QueryWidget(`id(`name), `Value);

		//finding entry in list
		foreach (map element, CaMgm::adv_issuer_alt_name_list, ``{
		    if (element["kind"]:"" == current_kind
			&& element["name"]:"" == current_name )
		    {
			dummy_map = add (dummy_map, new_entry);
		    }
		    else
		    {
			dummy_map = add (dummy_map, element);
		    }
		});
		
		CaMgm::adv_issuer_alt_name_list	= dummy_map;
		break;
	    }
	    else if (ret == `cancel)
	    {
		break;
	    }
	}
	
	UI::CloseDialog ();
	// restoring table
	get_advanced_issuer_alt_name();	
    }
    

    define void get_advanced_key_usage() ``{
	y2milestone("calling get_advanced_key_usage");

	UI::ChangeWidget(`id(`id_adv_cri_key_usage), `Value, CaMgm::adv_cri_key_usage);	
	UI::ChangeWidget(`id(`digitalSignature), `Value, CaMgm::adv_digitalSignature);	
	UI::ChangeWidget(`id(`nonRepudiation), `Value, CaMgm::adv_nonRepudiation);	
	UI::ChangeWidget(`id(`cRLSign), `Value, CaMgm::adv_cRLSign);	
	UI::ChangeWidget(`id(`keyEncipherment), `Value, CaMgm::adv_keyEncipherment);	
	UI::ChangeWidget(`id(`dataEncipherment), `Value, CaMgm::adv_dataEncipherment);	
	UI::ChangeWidget(`id(`encipherOnly), `Value, CaMgm::adv_encipherOnly);	
	UI::ChangeWidget(`id(`keyAgreement), `Value, CaMgm::adv_keyAgreement);	
	UI::ChangeWidget(`id(`keyCertSign), `Value, CaMgm::adv_keyCertSign);	
	UI::ChangeWidget(`id(`decipherOnly), `Value, CaMgm::adv_decipherOnly);	
    }
    define string set_advanced_key_usage() ``{
	y2milestone("calling set_advanced_key_usage");
	string error = "";
	
	CaMgm::adv_cri_key_usage = (boolean) UI::QueryWidget(`id(`id_adv_cri_key_usage), `Value);	
	CaMgm::adv_digitalSignature = (boolean) UI::QueryWidget(`id(`digitalSignature), `Value);	
	CaMgm::adv_nonRepudiation = (boolean) UI::QueryWidget(`id(`nonRepudiation), `Value);	
	CaMgm::adv_cRLSign = (boolean) UI::QueryWidget(`id(`cRLSign), `Value);	
	CaMgm::adv_keyEncipherment = (boolean) UI::QueryWidget(`id(`keyEncipherment), `Value);	
	CaMgm::adv_dataEncipherment = (boolean) UI::QueryWidget(`id(`dataEncipherment), `Value);	
	CaMgm::adv_encipherOnly = (boolean) UI::QueryWidget(`id(`encipherOnly), `Value);	
	CaMgm::adv_keyAgreement = (boolean) UI::QueryWidget(`id(`keyAgreement), `Value);	
	CaMgm::adv_keyCertSign = (boolean) UI::QueryWidget(`id(`keyCertSign), `Value);	
	CaMgm::adv_decipherOnly = (boolean) UI::QueryWidget(`id(`decipherOnly), `Value);	
	
	return error;
    }

    
    define void get_advanced_netscape_nsComment() ``{
	y2milestone("calling get_advanced_netscape_nsComment");

	UI::ChangeWidget(`id(`id_adv_cri_nsComment), `Value, CaMgm::adv_cri_nsComment);
	UI::ChangeWidget(`id(`id_adv_nsComment), `Value, CaMgm::adv_nsComment);		
    }
    define string set_advanced_netscape_nsComment() ``{
	y2milestone("calling set_advanced_netscape_nsComment");
	string error = "";

	CaMgm::adv_cri_nsComment = (boolean) UI::QueryWidget(`id(`id_adv_cri_nsComment), `Value);
	CaMgm::adv_nsComment = (string) UI::QueryWidget(`id(`id_adv_nsComment), `Value);		
	
	return error;
    }	

    
    define void get_advanced_netscape_nsCertType() ``{
	y2milestone("calling get_advanced_netscape_nsCertType");

	UI::ChangeWidget(`id(`id_adv_cri_nsCertType), `Value, CaMgm::adv_cri_nsCertType);
	UI::ChangeWidget(`id(`client), `Value, CaMgm::adv_client);
	UI::ChangeWidget(`id(`server), `Value, CaMgm::adv_server);
	UI::ChangeWidget(`id(`sslCA), `Value, CaMgm::adv_sslCA);
	UI::ChangeWidget(`id(`email), `Value, CaMgm::adv_email);
	UI::ChangeWidget(`id(`reserved), `Value, CaMgm::adv_reserved);
	UI::ChangeWidget(`id(`emailCA), `Value, CaMgm::adv_emailCA);
	UI::ChangeWidget(`id(`objectSign), `Value, CaMgm::adv_objectSign);
	UI::ChangeWidget(`id(`objCA), `Value, CaMgm::adv_objCA);	
    }
    define string set_advanced_netscape_nsCertType() ``{
	y2milestone("calling set_advanced_netscape_nsCertType");
	string error = "";

	CaMgm::adv_cri_nsCertType = (boolean) UI::QueryWidget(`id(`id_adv_cri_nsCertType), `Value);
	CaMgm::adv_client = (boolean) UI::QueryWidget(`id(`client), `Value);
	CaMgm::adv_server = (boolean) UI::QueryWidget(`id(`server), `Value);
	CaMgm::adv_sslCA = (boolean) UI::QueryWidget(`id(`sslCA), `Value);
	CaMgm::adv_email = (boolean) UI::QueryWidget(`id(`email), `Value);
	CaMgm::adv_reserved = (boolean) UI::QueryWidget(`id(`reserved), `Value);
	CaMgm::adv_emailCA = (boolean) UI::QueryWidget(`id(`emailCA), `Value);
	CaMgm::adv_objectSign = (boolean) UI::QueryWidget(`id(`objectSign), `Value);
	CaMgm::adv_objCA = (boolean) UI::QueryWidget(`id(`objCA), `Value);
	
	return error;
    }

    
    define void get_advanced_netscape_nsSslServerName() ``{
	y2milestone("calling get_advanced_netscape_nsSslServerName");

	UI::ChangeWidget(`id(`id_adv_cri_nsSslServerName), `Value, CaMgm::adv_cri_nsSslServerName);
	UI::ChangeWidget(`id(`id_adv_nsSslServerName), `Value, CaMgm::adv_nsSslServerName);		
    }
    define string set_advanced_netscape_nsSslServerName() ``{
	y2milestone("calling set_advanced_netscape_nsSslServerName");
	string error = "";

	CaMgm::adv_cri_nsSslServerName = (boolean) UI::QueryWidget(`id(`id_adv_cri_nsSslServerName), `Value);
	CaMgm::adv_nsSslServerName = (string) UI::QueryWidget(`id(`id_adv_nsSslServerName), `Value);		
	
	return error;
    }

    
    define void get_advanced_subject_alt_name() ``{
	y2milestone("calling get_advanced_subject_alt_name");

	list<term> itemList = [];
	integer i = 0;
	foreach (map element, CaMgm::adv_subject_alt_name_list, ``{
	    itemList = add (itemList, `item (`id (i), element["kind"]:"", element["name"]:"" ) );
	    i = i + 1;
	});

	UI::ChangeWidget(`id(`id_adv_subject_alt_name), `Items, itemList);
	UI::ChangeWidget(`id(`id_adv_cri_subject_alt_name), `Value, CaMgm::adv_cri_subject_alt_name);
	UI::ChangeWidget(`id(`id_adv_copy_subject_alt_name), `Value, CaMgm::adv_copy_subject_alt_name);			
    }
    define string set_advanced_subject_alt_name() ``{
	y2milestone("calling set_advanced_subject_alt_name");
	string error = "";

	CaMgm::adv_cri_subject_alt_name = (boolean) UI::QueryWidget(`id(`id_adv_cri_subject_alt_name), `Value);
	CaMgm::adv_copy_subject_alt_name = (boolean) UI::QueryWidget(`id(`id_adv_copy_subject_alt_name), `Value);		
	// The table widget will be filled in the add or delete callback
	
	return error;
    }

    define term subject_box = `HBox( `VSpacing(10),
				     `VBox (
					    `HSpacing(10),
					    `RadioButtonGroup(`id(`rb), 
							      `HBox(
								    `RadioButton(`id("URI"), `opt(`notify), "URI"),
								    `RadioButton(`id("DNS"), `opt(`notify), "DNS"),
								    `RadioButton(`id("IP"), `opt(`notify), "IP"),
								    `RadioButton(`id("RID"), `opt(`notify), "RID")
								    )
							      ),
					    `TextEntry(`id(`name), "Name:"),
					    // push button label
					    `HBox(`PushButton (`id(`cancel), `opt(`key_F9), Label::CancelButton()),
						  `HStretch(),
						  `PushButton (`id(`ok), `opt(`default, `key_F10), Label::OKButton())
						  ),
					    `HSpacing(10)
					    ),
				     `VSpacing(10)
				     );
    
    define void add_advanced_subject_alt_name() ``{
	y2milestone("Calling add_advanced_subject_alt_name");
	
	UI::OpenDialog (`opt(`decorated ),
			subject_box
			);
	UI::SetFocus (`id(`ok));
	while (true)
	{
	    any ret = UI::UserInput();
	    if (ret == `ok)
	    {
		map new_entry = $[];
		new_entry["kind"] = (string) UI::QueryWidget(`id(`rb), `CurrentButton);
		new_entry["name"] = (string) UI::QueryWidget(`id(`name), `Value);
		CaMgm::adv_subject_alt_name_list	= add (CaMgm::adv_subject_alt_name_list, new_entry);
		break;
	    }
	    else if (ret == `cancel)
	    {
		break;
	    }
	}
	
	UI::CloseDialog ();
	// restoring table
	get_advanced_subject_alt_name();	
    }
    define void delete_advanced_subject_alt_name() ``{
	y2milestone("Calling delete_advanced_subject_alt_name");
	
	integer current_item  = (integer)UI::QueryWidget(`id(`id_adv_subject_alt_name), `CurrentItem);
	term table_item = (term) UI::QueryWidget(`id(`id_adv_subject_alt_name), `Item(current_item));

	if (table_item == nil)
	{
	    Popup::Error (_("No item has been selected."));
	    return;
	}

	string current_kind = (string) select(table_item, 1, "");
	string current_name = (string) select(table_item, 2, "");
	
        if (Popup::YesNoHeadline (
                // To translators: ContinueCancel Popup headline
                _("Delete"),
                // To translators: ContinueCancel Popup
                _("Really delete this entry ?")))
        {
	    list<map> dummy_map = [];

	    //finding entry in list
	    foreach (map element, CaMgm::adv_subject_alt_name_list, ``{
		if (element["kind"]:"" != current_kind
		    || element["name"]:"" != current_name )
		{
		    dummy_map = add (dummy_map, element);
		}
	    });
		
	    CaMgm::adv_subject_alt_name_list	= dummy_map;
	}

	// restoring table
	get_advanced_subject_alt_name();			
    }
    define void modify_advanced_subject_alt_name() ``{
	y2milestone("Calling modify_advanced_subject_alt_name");

	integer current_item  = (integer)UI::QueryWidget(`id(`id_adv_subject_alt_name), `CurrentItem);
	term table_item = (term) UI::QueryWidget(`id(`id_adv_subject_alt_name), `Item(current_item));

	if (table_item == nil)
	{
	    Popup::Error (_("No item has been selected."));
	    return;
	}

	string current_kind = (string) select(table_item, 1, "");
	string current_name = (string) select(table_item, 2, "");
	
	UI::OpenDialog (`opt(`decorated ),
			subject_box
			);

	UI::ChangeWidget(`id(`name), `Value, current_name);
	UI::ChangeWidget(`id(`rb), `CurrentButton, current_kind);
	
	UI::SetFocus (`id(`ok));
	while (true)
	{
	    any ret = UI::UserInput();
	    if (ret == `ok)
	    {
		map new_entry = $[];
		list<map> dummy_map = [];
		new_entry["kind"] = (string) UI::QueryWidget(`id(`rb), `CurrentButton);
		new_entry["name"] = (string) UI::QueryWidget(`id(`name), `Value);

		//finding entry in list
		foreach (map element, CaMgm::adv_subject_alt_name_list, ``{
		    if (element["kind"]:"" == current_kind
			&& element["name"]:"" == current_name )
		    {
			dummy_map = add (dummy_map, new_entry);
		    }
		    else
		    {
			dummy_map = add (dummy_map, element);
		    }
		});
		
		CaMgm::adv_subject_alt_name_list = dummy_map;
		break;
	    }
	    else if (ret == `cancel)
	    {
		break;
	    }
	}
	
	UI::CloseDialog ();
	// restoring table
	get_advanced_subject_alt_name();		
    }

    
    define void get_advanced_unstructured_name() ``{
	y2milestone("calling get_advanced_unstructured_name");

	UI::ChangeWidget(`id(`id_adv_unstructured_name), `Value, CaMgm::adv_unstructured_name);		
    }
    define string set_advanced_unstructured_name() ``{
	y2milestone("calling set_advanced_unstructured_name");
	string error = "";

	CaMgm::adv_unstructured_name = (string) UI::QueryWidget(`id(`id_adv_unstructured_name), `Value);		
	
	return error;
    }	

    
    define void get_expert_key_identifier() ``{
	y2milestone("calling get_expert_key_identifier");

	UI::ChangeWidget(`id(`id_exp_cri_SubjectKeyIdentifier), `Value, CaMgm::exp_cri_SubjectKeyIdentifier);
	UI::ChangeWidget(`id(`id_exp_SubjectKeyIdentifier), `Value, CaMgm::exp_SubjectKeyIdentifier);		
	UI::ChangeWidget(`id(`id_exp_cri_AuthorityKeyIdentifier), `Value, CaMgm::exp_cri_AuthorityKeyIdentifier);
	UI::ChangeWidget(`id(`id_exp_AuthorityKeyIdentifier), `Value, CaMgm::exp_AuthorityKeyIdentifier);		
    }
    define string set_expert_key_identifier() ``{
	y2milestone("calling set_expert_key_identifier");
	string error = "";

	CaMgm::exp_cri_SubjectKeyIdentifier = (boolean) UI::QueryWidget(`id(`id_exp_cri_SubjectKeyIdentifier), `Value);
	CaMgm::exp_SubjectKeyIdentifier = (string) UI::QueryWidget(`id(`id_exp_SubjectKeyIdentifier), `Value);		
	CaMgm::exp_cri_AuthorityKeyIdentifier = (boolean) UI::QueryWidget(`id(`id_exp_cri_AuthorityKeyIdentifier), `Value);
	CaMgm::exp_AuthorityKeyIdentifier = (string) UI::QueryWidget(`id(`id_exp_AuthorityKeyIdentifier), `Value);		
	
	return error;
    }	

    
    define void get_expert_netscape_nsBaseUrl() ``{
	y2milestone("calling get_expert_netscape_nsBaseUrl");
	
	UI::ChangeWidget(`id(`id_exp_cri_netscape_nsBaseUrl), `Value, CaMgm::exp_cri_netscape_nsBaseUrl);
	UI::ChangeWidget(`id(`id_exp_netscape_nsBaseUrl), `Value, CaMgm::exp_netscape_nsBaseUrl);		
    }
    define string set_expert_netscape_nsBaseUrl() ``{
	y2milestone("calling set_expert_netscape_nsBaseUrl");
	string error = "";

	CaMgm::exp_cri_netscape_nsBaseUrl = (boolean) UI::QueryWidget(`id(`id_exp_cri_netscape_nsBaseUrl), `Value);
	CaMgm::exp_netscape_nsBaseUrl = (string) UI::QueryWidget(`id(`id_exp_netscape_nsBaseUrl), `Value);		
	
	return error;
    }	

    
    define void get_expert_netscape_nsRevocationUrl() ``{
	y2milestone("calling get_expert_netscape_nsRevocationUrl");
	
	UI::ChangeWidget(`id(`id_exp_cri_netscape_nsRevocationUrl), `Value, CaMgm::exp_cri_netscape_nsRevocationUrl);
	UI::ChangeWidget(`id(`id_exp_netscape_nsRevocationUrl), `Value, CaMgm::exp_netscape_nsRevocationUrl);		
    }
    define string set_expert_netscape_nsRevocationUrl() ``{
	y2milestone("calling set_expert_netscape_nsRevocationUrl");
	string error = "";

	CaMgm::exp_cri_netscape_nsRevocationUrl = (boolean) UI::QueryWidget(`id(`id_exp_cri_netscape_nsRevocationUrl), `Value);
	CaMgm::exp_netscape_nsRevocationUrl = (string) UI::QueryWidget(`id(`id_exp_netscape_nsRevocationUrl), `Value);		
	
	return error;
    }	

    
    define void get_expert_netscape_nsCaRevocationUrl() ``{
	y2milestone("calling get_expert_netscape_nsCaRevocationUrl");
	
	UI::ChangeWidget(`id(`id_exp_cri_netscape_nsCaRevocationUrl), `Value, CaMgm::exp_cri_netscape_nsCaRevocationUrl);
	UI::ChangeWidget(`id(`id_exp_netscape_nsCaRevocationUrl), `Value, CaMgm::exp_netscape_nsCaRevocationUrl);		
    }
    define string set_expert_netscape_nsCaRevocationUrl() ``{
	y2milestone("calling set_expert_netscape_nsCaRevocationUrl");
	string error = "";

	CaMgm::exp_cri_netscape_nsCaRevocationUrl = (boolean) UI::QueryWidget(`id(`id_exp_cri_netscape_nsCaRevocationUrl), `Value);
	CaMgm::exp_netscape_nsCaRevocationUrl = (string) UI::QueryWidget(`id(`id_exp_netscape_nsCaRevocationUrl), `Value);		
	
	return error;
    }	

    
    define void get_expert_netscape_nsRenewalUrl() ``{
	y2milestone("calling get_expert_netscape_nsRenewalUrl");
	
	UI::ChangeWidget(`id(`id_exp_cri_netscape_nsRenewalUrl), `Value, CaMgm::exp_cri_netscape_nsRenewalUrl);
	UI::ChangeWidget(`id(`id_exp_netscape_nsRenewalUrl), `Value, CaMgm::exp_netscape_nsRenewalUrl);		
    }
    define string set_expert_netscape_nsRenewalUrl() ``{
	y2milestone("calling set_expert_netscape_nsRenewalUrl");
	string error = "";

	CaMgm::exp_cri_netscape_nsRenewalUrl = (boolean) UI::QueryWidget(`id(`id_exp_cri_netscape_nsRenewalUrl), `Value);
	CaMgm::exp_netscape_nsRenewalUrl = (string) UI::QueryWidget(`id(`id_exp_netscape_nsRenewalUrl), `Value);		
	
	return error;
    }	

    
    define void get_expert_netscape_nsCaPolicyUrl() ``{
	y2milestone("calling get_expert_netscape_nsCaPolicyUrl");

	UI::ChangeWidget(`id(`id_exp_cri_netscape_nsCaPolicyUrl), `Value, CaMgm::exp_cri_netscape_nsCaPolicyUrl);
	UI::ChangeWidget(`id(`id_exp_netscape_nsCaPolicyUrl), `Value, CaMgm::exp_netscape_nsCaPolicyUrl);		
    }
    define string set_expert_netscape_nsCaPolicyUrl() ``{
	y2milestone("calling set_expert_netscape_nsCaPolicyUrl");
	string error = "";
	
	CaMgm::exp_cri_netscape_nsCaPolicyUrl = (boolean) UI::QueryWidget(`id(`id_exp_cri_netscape_nsCaPolicyUrl), `Value);
	CaMgm::exp_netscape_nsCaPolicyUrl = (string) UI::QueryWidget(`id(`id_exp_netscape_nsCaPolicyUrl), `Value);		
	
	return error;
    }	

    
    define void get_expert_authorityInfoAccess() ``{
	y2milestone("calling get_expert_authorityInfoAccess");
	
	UI::ChangeWidget(`id(`id_exp_cri_authorityInfoAccess), `Value, CaMgm::exp_cri_authorityInfoAccess);
	UI::ChangeWidget(`id(`id_exp_authorityInfoAccess), `Value, CaMgm::exp_authorityInfoAccess);		
    }
    define string set_expert_authorityInfoAccess() ``{
	y2milestone("calling set_expert_authorityInfoAccess");
	string error = "";

	CaMgm::exp_cri_authorityInfoAccess = (boolean) UI::QueryWidget(`id(`id_exp_cri_authorityInfoAccess), `Value);
	CaMgm::exp_authorityInfoAccess = (string) UI::QueryWidget(`id(`id_exp_authorityInfoAccess), `Value);		
	
	return error;
    }	

    
    define void get_expert_extendedKeyUsage() ``{
	y2milestone("calling get_expert_extendedKeyUsage");
	
	UI::ChangeWidget(`id(`id_exp_cri_extendedKeyUsage), `Value, CaMgm::exp_cri_extendedKeyUsage);
	UI::ChangeWidget(`id(`id_exp_extendedKeyUsage), `Value, CaMgm::exp_extendedKeyUsage);		
    }	
    define string set_expert_extendedKeyUsage() ``{
	y2milestone("calling set_expert_extendedKeyUsage");
	string error = "";

	CaMgm::exp_cri_extendedKeyUsage = (boolean) UI::QueryWidget(`id(`id_exp_cri_extendedKeyUsage), `Value);
	CaMgm::exp_extendedKeyUsage = (string) UI::QueryWidget(`id(`id_exp_extendedKeyUsage), `Value);		
	
	return error;
    }
    

}
