/**
 *
 * File:
 *   dialog-ca.ycp
 *
 * Module:
 *   CA Management
 *
 * Summary: Tab frame of a selected CA
 *
 *
 * Authors:
 *   Stefan Schubert <schubi@suse.de>
 *
 * $Id$
 *
 * Tab frame of a selected CA
 *
 */


{

textdomain "ca-management";
import "CaMgm";
import "Label";
import "Wizard";
import "Label";
import "Popup";
import "YaPI::CaManagement";

include "ca-management/util.ycp";
include "ca-management/new_cert.ycp";
include "ca-management/ca.ycp";
include "ca-management/certificate.ycp";
include "ca-management/crl.ycp";
include "ca-management/request.ycp";

/**
 * Faking Tab Widget for NCurses
 */
term DumbTabs( list<term> items, term contents )
{
    term tabs = `HBox();

    foreach ( term item, items, 
    {
	string text = (string) select( item, 1, "" );
	term idTerm = (term) select( item, 0, `id(`unknown) );
	tabs = add( tabs, `PushButton( idTerm, text ) );
    });

    tabs = add( tabs, `HStretch() );
    
    y2milestone( "Creating tabs: %1", tabs );

    return `VBox( tabs, `Frame( "", contents ) );
}


/**
 * Dialog Zone Editor - Tab
 * @param string tab_id
 * @return term dialog for ZoneEditorDialog()
 */
term getDialogCATab (string tab_id) {
    if		( tab_id == "CA" )		return getCATab();
    else if	( tab_id == "Certificates" )	return getCertificateTab();
    else if	( tab_id == "CRL" )		return getCRLTab();
    else if	( tab_id == "Request" )		return getRequestTab();    
    // This should never happen, but ...
    y2error ( "unknown tab_id: %1", tab_id );
    // When no dialog defined for this tab (software error)
    return `Label ( _("Software error - Unknown Tab") );
}

void initDialogCATab (string dialog) {
    if (dialog == "CA")
    {
	initCATab ();
    }
    else if (dialog == "Certificates")
    {
	initCertificateTab ();
    }
    else if (dialog == "CRL")
    {
	initCRLTab ();
    }
    else if (dialog == "Request")
    {
	initRequestTab ();
    }    
}

string getHelpText (string dialog) {
    if (dialog == "CA")
    {
	return CAHelptext;
    }
    else if (dialog == "Certificates")
    {
	return certificateHelptext;
    }
    else if (dialog == "CRL")
    {
	return CRLHelptext;
    }
    else if (dialog == "Request")
    {
	return requestHelptext;
    }    
    return "missing help text";
}

void storeDialogCATab (string dialog) {
    y2debug("stroring current Tab");
}

symbol handleDialogCATab (string dialog, map event) {
    symbol ret = nil;
    if (dialog == "CA")
    {
	ret = handleCATab (event);
    }
    else if (dialog == "Certificates")
    {
	ret = handleCertificateTab (event);
    }
    else if (dialog == "CRL")
    {
	ret = handleCRLTab (event);
    }
    else if (dialog == "Request")
    {
	ret = handleRequestTab (event);
    }    
    return ret;
}

/**
 * Dialog CA - Main
 * @return any dialog result for wizard
 */
symbol runCADialog () {

    // Dialog Caption - Expert Settings - Zone Editor
    string caption = _("Certification Authority (CA)");

    string current_tab = "CA";

    list<term> tab_terms = [
								// Menu Item - CA - Tab
			    `item ( `id( "CA" ),		_("&Description") ),
								// Menu Item - CA - Tab
			    `item ( `id( "Certificates" ),	_("C&ertificates") ),
								// Menu Item - CA - Tab
			    `item ( `id( "CRL" ),		_("CR&L") ),
								// Menu Item - CA - Tab
			    `item ( `id( "Request" ),		_("&Requests") ),			    
			    ];

    term contents =
	`Top (
	    `VBox( `opt ( `hvstretch ),
		   `Left(`Heading(_("CA Name: ") + CaMgm::currentCA)),
		   // Here start Tabs
		   // FIXME: after `Tab implementation
		   UI::HasSpecialWidget(`DumbTab ) ?
		   (
		    `DumbTab (`id (`dumbtab), tab_terms,
			`ReplacePoint (`id( `tabContents ), getDialogCATab (current_tab))
		    )
		    )
		   :
		   (
		    DumbTabs (tab_terms ,
			      `ReplacePoint (`id (`tabContents ), getDialogCATab (current_tab)))
		    )
		   )
	    );

    // FIXME: Only one help is used for all tabs. Maybe would be better to change the help for every single tab.
    Wizard::SetContentsButtons ( caption, contents, getHelpText (current_tab),
	Label::BackButton (), Label::OKButton () );
    initDialogCATab (current_tab);

    map event = nil;
    any ret = nil;
    while(true) {

	event = UI::WaitForEvent();
	ret = event["ID"]:nil;

        if (ret == `next ) {
	    break;
	}
	if (ret == `back)
	{
	    break;
	}
	else if (ret == `cancel || ret == `abort)
	{
	    if (Popup::ReallyAbort (true))
		return `abort;
	    else
		continue;
        }
	else if	(ret == "CA"
		  || ret == "Certificates"
		  || ret == "CRL"
		  || ret == "Request")
	{
	    storeDialogCATab (current_tab);
	    current_tab = (string)ret;

	    UI::ReplaceWidget (`tabContents, getDialogCATab (current_tab));
	    Wizard::RestoreHelp (getHelpText (current_tab));
	    initDialogCATab (current_tab);	    
	}
	else
	{
	    // ensure the same tab selected
	    if ( UI::HasSpecialWidget (`DumbTab) )
	    {
		UI::ChangeWidget (`id (`dumbtab), `CurrentItem, current_tab );
	    }
	    ret = handleDialogCATab (current_tab, event);
	    if (ret == `again)
	    {
		UI::ReplaceWidget (`tabContents, getDialogCATab (current_tab));
		Wizard::RestoreHelp (getHelpText (current_tab));
		initDialogCATab (current_tab);	    		
	    }
	}
    }

    if (ret == `next)
    {
	storeDialogCATab (current_tab);
    }

    return (symbol)ret;
}



/* EOF */
}
