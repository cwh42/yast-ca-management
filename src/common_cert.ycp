/**
 * File:        clients/common_cert.ycp
 * Package:     CA Management
 * Summary:     Main file
 * Authors:     Stefan Schubert <schubi@suse.de>
 *
 * $Id$
 *
 * Showing current common server certificate
 */

{

/***
 * <h3>Common Server Certificate</h3>
 */

textdomain "ca-management";
import "CaMgm";
import "CommandLine";
import "Wizard";
import "Label";
import "Popup";
import "YaPI::CaManagement";

include "ca-management/util.ycp";

/* The main () */
y2milestone ("----------------------------------------");
y2milestone ("common_cert module started");

/**
 * Open main dialog sequence
 */
define symbol MainSequence () {

Wizard::CreateDialog();
Wizard::SetDesktopIcon("ca-management");

// help text 1/7
string helptext = _("<p>A Server Certificate is used by services which provide SSL/TLS encrypted network connections.</p>");

// help text 2/7
helptext = helptext + _("<p>The purpose of the <b>Common Server Certificate</b> is, to provide a certificate for several services running on this host. ");

// help text 3/7
helptext = helptext + _("Some YaST modules provide the capability to use this certificate during configuration of such a service.</p>");

// help text 4/7
helptext = helptext + _("<p>With the <b>Import/Replace</b> button you can add a new server certificate or replace the currect one.</p>");

// help text 5/7
helptext = helptext + _("<p>You can remove the Certificates by clicking the <b>Remove</b> button. But make sure, that it is not used anymore by other services.</p>");

// help text 6/7
helptext = helptext + _("<p>Certificates can be written to a file using <b>Export to File</b> in section <b>Certificate</b> in the <b>CA Management</b> module.</p>");

// help text 7/7
helptext = helptext + _("<p>Certificates to import from disk must have been written in <b>PKCS12 format with CA chain</b>.</p>");

symbol ui = nil;

repeat
{
    string ret = (string) YaPI::CaManagement::ReadFile ($[ "inFile":"/etc/ssl/servercerts/servercert.pem",
                                                          "datatype":"CERTIFICATE",
                                                          "inForm":"PEM",
                                                          "type":"plain"]);

    y2milestone("ReadCertificate(/etc/ssl/servercerts/servercert.pem): %1", ret);
    if (ret == nil)
    {
        ret = "<pre>Common Server Certificate not found.\nYou can import a certificate from disk</pre>";
    }
    else
    {
        ret = "<pre>" + ret + "</pre>";
    }

    term contents = `VBox (
                          `Left(`Label (_("Description"))),
                          `VSpacing (0.5),
                          `RichText (ret),
                          `VSpacing (0.5),
                          `HBox (
                              `HStretch(),
                              // push button label
                              `PushButton (`id(`remove), _("&Remove")),
                              // push button label
                              `PushButton (`id(`importDisk), _("&Import/Replace")))
                          );

    // To translators: dialog label
    Wizard::SetContents (_("Common Server Certificate"), contents, helptext, false, true);
    Wizard::SetNextButton(`next, Label::FinishButton() );

    ui = (symbol) UI::UserInput ();
    if (ui == `importDisk)
    {
        importCertificateFromDisk();
        ui = `again;
    }
    if (ui == `remove)
    {
        map crt = (map) YaPI::CaManagement::ReadFile ($[ "inFile":"/etc/ssl/servercerts/servercert.pem",
                                                         "datatype":"CERTIFICATE",
                                                         "inForm":"PEM",
                                                         "type":"parsed"]);
        integer expired = (integer) crt["EXPIRED"]:0;
        boolean reallyRemove = false;
        if (expired == 1)
        {
          // To translators: popup yes/no question
          reallyRemove = Popup::YesNo( "Really remove the Certificate?" );
        }
        else
        {
           //removeCertificateFromDisk();
           reallyRemove = Popup::AnyQuestion( Label::WarningMsg(),
                                              // To translators: warning popup yes/no question (1/3)
                                              _("The certificate is not yet expired.\n")+
                                              // To translators: warning popup yes/no question (2/3)
                                              _("Please make sure, that no service use this certificate anymore.\n\n")+
                                              // To translators: warning popup yes/no question (3/3)
                                              _("Are you sure, that you want to remove the certificate?"),
                                              Label::YesButton(),
                                              Label::NoButton(),
                                              `focus_no );
        }
        y2milestone ("Remove certificate? => %1", reallyRemove);
        if ( reallyRemove )
        {
            YaPI::CaManagement::RemoveCommonServerCertificate();
        }
        ui = `again;
    }
    if(ui == `cancel)
    {
        ui = `abort;
    }
}
until (contains ([`back, `next, `abort], ui));
Wizard::CloseDialog();
}

map cmdline = $[
    "id"                : "common_cert",
    "help"              : _("Common Server Certificate"),
    "guihandler"        : MainSequence,
];
CommandLine::Run (cmdline);

/* Finish */
y2milestone("common_cert finished");
y2milestone("----------------------------------------");


/* EOF */
}
