/**
 * File:        clients/ca_mgm.ycp
 * Package:     CA Management
 * Summary:     Main file
 * Authors:     Stefan Schubert <schubi@suse.de>
 *
 * $Id$
 *
 * Main file for CA Management. Uses all other files.
 */

{

import "CommandLine";
    
/***
 * <h3>CA Management</h3>
 */

textdomain "ca-management";

include "ca-management/commandline.ycp";

/**
 * Command line definition
 */
map cmdline = $[
    "help"	: _("Managing CA and certificates"),
    "id"	: "ca-mgm",
    "actions"	: $[
	"createCA" : $[
	    "help"	: _("Create a Root CA"),
	],
	"createCertificate" : $[
	    "help"	: _("Create a certificate of a CA") ],
	"createCRL" : $[
			"help"	: _("Create CRL of a CA") ],
	"exportCA"  : $[
			"help"	: _("Export a CA to a file") ],
	"exportCertificate"  : $[
			"help"	: _("Export a certificate to a file") ],
	"exportCRL"  : $[
			"help"	: _("Export a CRL to a file") ]
    ],
    "options" : $[
	"caname" : $[
		     "help"	: "CA name",
		     "type"	: "string"
	],
	"certname" : $[
		     "help"	: "certificat-name",
		     "type"	: "string"
	],	
	"cn" : $[
		 "help": "common name",
		 "type": "string"
	],
	"email" : $[
		 "help": _("email address"),
		 "type": "string",
		 "example" : "my@email.addr"
	],
	"ou" : $[
		 "help": _("organisation unit"),
		 "type": "string"
	],
	"o" : $[
		 "help": _("organisation"),
		 "type": "string"
	],
	"l" : $[
		 "help": _("locality"),
		 "type": "string"
	],
	"st" : $[
		 "help": _("state"),
		 "type": "string"
	],
	"c" : $[
		 "help": _("country"),
		 "type": "string"
	],
	"days" : $[
		 "help": _("valid days"),
		 "type": "string"
	],
	"keyLength" : $[
		 "help": _("key length"),
		 "type": "string",
		 "example" : "2048"
	],
	"keyPasswd" : $[
		 "help": _("Password (Security: This should be given by an environment variable)"),
		 "type": "string",
		 "example" : "keyPasswd=mypassword yast2 ca-mgm createCA -caname myCA"
	],
	"type" : $[
		 "help": "client | server",
		 "type": "string"
	],
	"type" : $[
		 "help": "client | server",
		 "type": "string"
	],	
	"capasswd" : $[
		 "help": _("CA password (Security: This should be given by an environment variable)"),
		 "type": "string",
		 "example" : "keyPasswd=mypassword capasswd=mycapassword yast2 ca-mgm createCertificate ..."
	],
	"p12passwd" : $[
		 "help": _("P12 password (Security: This should be given by an environment variable)"),
		 "type": "string",
		 "example" : "p12passwd=myp12password yast2 ca-mgm exportCA..."
	],	
	"certFormat" : $[
		 "help": "PEM_CERT | PEM_CERT_KEY | PEM_CERT_ENCKEY | DER_CERT | PKCS12 | PKCS12_CHAIN",
		 "type": "string"
	],		
	"crlFormat" : $[
		 "help": "PEM | DER",
		 "type": "string"
	],	
	"file" : $[
		 "help": _("path of the exported CA/certificate/CRL"),
		 "type": "string"
	]	
    ],
    "mappings" : $[
		   "createCA" : ["caname", "cn", "email", "ou", "o", "l" , "st" , "c",
				 "days", "keyLength", "keyPasswd" ],
		   "createCertificate" : ["caname", "type" ,"cn", "email", "ou", "o", "l" , "st" , "c",
				 "days", "keyLength", "capasswd", "keyPasswd" ],
		   "createCRL": ["caname" ,"days" ,"capasswd"],
		   "exportCA": ["caname", "certFormat", "file", "capasswd", "p12passwd"],
		   "exportCertificate": ["caname", "certname", "certFormat", "file",
					 "keyPasswd", "p12passwd"],
		   "exportCRL": [ "caname", "crlFormat", "file"]
    ]
];



/* The main () */
y2milestone ("----------------------------------------");
y2milestone ("CaMgm module started");

include "ca-management/wizards.ycp";

boolean ret = true;

/* Initialize the arguments */
if(!CommandLine::Init(cmdline, WFM::Args()))
{
    y2error("Commandline init failed");
    return false;
}

if(CommandLine::StartGUI())
{
    /* main ui function */
    MainSequence();
}
else
{
    // command line options
    /* Init variables */
    string command = "";
    list flags = [];
    map options = $[];
    string exit = "";
    list l = [];

    while(!CommandLine::Done())
    {
	map m = CommandLine::Command();
	command = m["command"]:"exit";
	options = m["options"]:$[];

	/* createCA */
	if(command == "createCA")
	{
	    ret = cmdCreateCA (options);
	}
	/* createCertificate */
	else if(command == "createCertificate")
	{
	    ret = cmdCreateCertificate(options);
	}
	/* createCRL */
	else if(command == "createCRL")
	{
	    ret = cmdCreateCRL(options);
	}
	/* exportCA */
	else if(command == "exportCA")
	{
	    ret = cmdExportCAtoFile (options);
	}
	/* exportCertificate */
	else if(command == "exportCertificate")
	{
	    ret = cmdExportCertificateToFile (options);
	}
	/* exportCRL */
	else if(command == "exportCRL")
	{
	    ret = cmdExportCRLtoFile (options);
	}			
	else
	{
	    /* maybe we got "exit" or "quit" */
	    if( !CommandLine::Done() ) {
		CommandLine::Print("Unknown command (should not happen)");
		continue;
	    }
	}
    }
}

/* Finish */
y2milestone("CaMgm module finished");
y2milestone("----------------------------------------");

return ret;

/* EOF */
}
