/**
 *
 * File:
 *   startup.ycp
 *
 * Module:
 *   CA Management
 *
 * Summary:
 *   Shows all available Root CAs
 *
 * Authors:
 *   Stefan Schubert <schubi@suse.de>
 *
 * $Id$
 *
 * CA Management - Root CAs
 *
 */


{

    textdomain "ca-management";

    import "CaMgm";
    import "Wizard";
    import "Label";
    import "Popup";
    import "CaManagement";

    /**
     * Creates CA items
     * @return a list of CA items formated for a UI table
     */
    define list<term> getCAList () ``{
        list<term> result = [];
        integer i = 0;

        list<string> CAList = (list<string>) CaManagement::ReadCAList(); //[ "CA1", "CA2", "CA3" ];
	y2milestone("Output of ReadCAList: %1", CAList);
	if (CAList == nil)
	{
	    showErrorCaManagement ();
	}
	else
	{
	    foreach (string element, CAList, ``{
		result = add (result, `item (`id (i), element ) );
		i = i + 1;
	    });
	}
        return result;
    }


    /**
     * startup dialog
     * @return `finish, `enter, 'createRoot
     */
    define symbol Startup () ``{

        // help text 1/2
        string helptext = _("<p>Please select one CA and press <b>Enter CA </b>.</p>");
        // help text 2/2
        helptext = helptext + _("<p><b>Create Root CA</b> generates a new root Certificate Authority.");

        list<term> termList = getCAList ();

        term buttons = `VBox ();
                                // To translators: pushbutton label
        buttons = add (buttons,  `HBox ( `HWeight (1, `PushButton (`id (`enter), `opt (`key_F4), _("&Enter CA")))));
                                // To translators: pushbutton label
        buttons = add (buttons,  `HBox ( `HWeight(1, `PushButton (`id (`createRoot), `opt (`key_F3), _("&Create Root CA")))));
        buttons = add (buttons, `VStretch());

        term contents = `HBox ();
        contents = add (contents, `HWeight (9,`Table (`id (`table), `opt (`notify, `immediate),
                                          `header (
                                              // To translators: table headers
                                              _("CA List")),
                                          termList)));
        contents = add (contents, `HWeight (4, buttons));


                                // To translators: dialog label
        Wizard::SetContents (_("CA Selection"), contents, helptext, false, true);
        UI::ChangeWidget (`id (`next), `Label, Label::FinishButton());
	UI::ChangeWidget (`id (`abort), `Enabled, false);

        symbol ui = nil;

        repeat
        {
            boolean anyitems = UI::QueryWidget (`id (`table), `CurrentItem) != nil;
            UI::ChangeWidget (`id (`enter), `Enabled, anyitems);

            // Kludge, because a `Table still does not have a shortcut. #16116
            UI::SetFocus (`id (`table));

            ui = (symbol) UI::UserInput ();
            if (contains ([`createRoot, `enter], ui))
            {
                integer id = (integer) UI::QueryWidget (`id (`table), `CurrentItem);
		term table_item = (term) UI::QueryWidget(`id(`table), `Item(id));

		if (table_item == nil)
		{
		    Popup::Error (_("No item has been selected."));
		    ui = `again;
		}
		else
		{
		    CaMgm::currentCA = (string) select(table_item, 1, "");
		}
            }
        }
        until (contains ([`createRoot, `enter,`next], ui));

        return ui;
    }

}
